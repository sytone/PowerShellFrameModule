<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="28" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2017-11-09" time="01:06:57">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\powershellframemodule" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="1.2424" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\powershellframemodule\Tests\PowerShellFrame-basic.tests.ps1" executed="True" result="Success" success="True" time="1.1127" asserts="0" description="C:\projects\powershellframemodule\Tests\PowerShellFrame-basic.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="General project validation: PowerShellFrame" executed="True" result="Success" success="True" time="1.1127" asserts="0" description="General project validation: PowerShellFrame">
            <results>
              <test-suite type="ParameterizedTest" name="General project validation: PowerShellFrame.Script &lt;file&gt; should be valid powershell" executed="True" result="Success" success="True" time="1.0272" asserts="0" description="Script &lt;file&gt; should be valid powershell">
                <results>
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Private\Resolve-Aliases.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Private\Resolve-Aliases.ps1 should be valid powershell" time="0.5356" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Add-DirectoryToPath.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Add-DirectoryToPath.ps1 should be valid powershell" time="0.0847" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\alias.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\alias.ps1 should be valid powershell" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Backup-Customizations.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Backup-Customizations.ps1 should be valid powershell" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Connect-RemoteDesktop.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Connect-RemoteDesktop.ps1 should be valid powershell" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Get-PsfConfig.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Get-PsfConfig.ps1 should be valid powershell" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Get-PsfGit.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Get-PsfGit.ps1 should be valid powershell" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Initialize-PsfGit.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Initialize-PsfGit.ps1 should be valid powershell" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-Choice.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-Choice.ps1 should be valid powershell" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-FolderBrowserDialog.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-FolderBrowserDialog.ps1 should be valid powershell" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-InputBoxDialog.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-InputBoxDialog.ps1 should be valid powershell" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-MessageBoxDialog.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-MessageBoxDialog.ps1 should be valid powershell" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-MultiLineInputBoxDialog.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-MultiLineInputBoxDialog.ps1 should be valid powershell" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-OpenFileDialog.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Read-OpenFileDialog.ps1 should be valid powershell" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Remove-PsfConfig.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Remove-PsfConfig.ps1 should be valid powershell" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Restart-Host.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Restart-Host.ps1 should be valid powershell" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Restore-Customizations.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Restore-Customizations.ps1 should be valid powershell" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Set-LocationWithPathCheck.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Set-LocationWithPathCheck.ps1 should be valid powershell" time="0.1524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Set-PsfConfig.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Set-PsfConfig.ps1 should be valid powershell" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Show-NavigationableMenu.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Show-NavigationableMenu.ps1 should be valid powershell" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Start-ElevatedProcess.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Start-ElevatedProcess.ps1 should be valid powershell" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Test-PsfChanges.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Test-PsfChanges.ps1 should be valid powershell" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\unalias.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\unalias.ps1 should be valid powershell" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\Public\Update-PsfGit.ps1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\Public\Update-PsfGit.ps1 should be valid powershell" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\PowerShellFrame.psd1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\PowerShellFrame.psd1 should be valid powershell" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\powershellframemodule\PowerShellFrame\PowerShellFrame.psm1 should be valid powershell" name="General project validation: PowerShellFrame.Script C:\projects\powershellframemodule\PowerShellFrame\PowerShellFrame.psm1 should be valid powershell" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Module 'PowerShellFrame' can import cleanly" name="General project validation: PowerShellFrame.Module 'PowerShellFrame' can import cleanly" time="0.0856" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\powershellframemodule\Tests\PowerShellFrame.tests.ps1" executed="True" result="Success" success="True" time="0.1297" asserts="0" description="C:\projects\powershellframemodule\Tests\PowerShellFrame.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Manifest Tests" executed="True" result="Success" success="True" time="0.1297" asserts="0" description="Module Manifest Tests">
            <results>
              <test-case description="Passes Test-ModuleManifest" name="Module Manifest Tests.Passes Test-ModuleManifest" time="0.1297" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>